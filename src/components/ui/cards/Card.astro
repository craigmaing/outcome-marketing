---
// Base Card Component for Outcome Digital Marketing Design System
export interface Props {
  variant?: 'default' | 'elevated' | 'outlined' | 'flat';
  padding?: 'none' | 'sm' | 'md' | 'lg';
  rounded?: 'none' | 'sm' | 'md' | 'lg' | 'xl';
  shadow?: 'none' | 'sm' | 'md' | 'lg';
  hover?: boolean;
  class?: string;
  id?: string;
  children: any;
}

const {
  variant = 'default',
  padding = 'md',
  rounded = 'lg',
  shadow = 'md',
  hover = false,
  class: className = '',
  id,
  children,
} = Astro.props;

// Generate base classes
const baseClasses = 'bg-white border border-neutral-200 transition-all duration-200';

// Variant classes
const variantClasses = {
  default: 'bg-white border border-neutral-200',
  elevated: 'bg-white border border-neutral-200 shadow-lg',
  outlined: 'bg-white border-2 border-neutral-300',
  flat: 'bg-white border-0'
};

// Padding classes
const paddingClasses = {
  none: '',
  sm: 'p-4',
  md: 'p-6',
  lg: 'p-8'
};

// Rounded classes
const roundedClasses = {
  none: 'rounded-none',
  sm: 'rounded-sm',
  md: 'rounded-md',
  lg: 'rounded-lg',
  xl: 'rounded-xl'
};

// Shadow classes
const shadowClasses = {
  none: 'shadow-none',
  sm: 'shadow-sm',
  md: 'shadow-md',
  lg: 'shadow-lg'
};

// Hover classes
const hoverClasses = hover ? 'hover:shadow-xl hover:-translate-y-1' : '';

// Combine all classes
const cardClasses = `${baseClasses} ${variantClasses[variant]} ${paddingClasses[padding]} ${roundedClasses[rounded]} ${shadowClasses[shadow]} ${hoverClasses} ${className}`.trim();

// Generate unique ID if not provided
const cardId = id || `card-${Math.random().toString(36).substr(2, 9)}`;
---

<div class={cardClasses} id={cardId}>
  <slot />
</div>
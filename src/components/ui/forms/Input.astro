---
// Form Input Component for Outcome Digital Marketing Design System
export interface Props {
  type?: 'text' | 'email' | 'tel' | 'url' | 'password' | 'number' | 'search';
  name: string;
  id?: string;
  label?: string;
  placeholder?: string;
  value?: string;
  required?: boolean;
  disabled?: boolean;
  readonly?: boolean;
  error?: string;
  hint?: string;
  size?: 'sm' | 'md' | 'lg';
  variant?: 'default' | 'outlined' | 'filled';
  class?: string;
  labelClass?: string;
  inputClass?: string;
}

const {
  type = 'text',
  name,
  id,
  label,
  placeholder,
  value,
  required = false,
  disabled = false,
  readonly = false,
  error,
  hint,
  size = 'md',
  variant = 'default',
  class: className = '',
  labelClass = '',
  inputClass = '',
} = Astro.props;

// Generate unique ID if not provided
const inputId = id || `input-${name}-${Math.random().toString(36).substr(2, 9)}`;

// Generate base classes
const baseClasses = 'block w-full rounded-md border transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';

// Size classes
const sizeClasses = {
  sm: 'px-3 py-2 text-sm',
  md: 'px-4 py-3 text-base',
  lg: 'px-5 py-4 text-lg'
};

// Variant classes
const variantClasses = {
  default: 'border-neutral-300 focus:border-primary-blue focus:ring-primary-blue',
  outlined: 'border-2 border-neutral-300 focus:border-primary-blue focus:ring-primary-blue',
  filled: 'border-neutral-200 bg-neutral-50 focus:border-primary-blue focus:ring-primary-blue focus:bg-white'
};

// Error classes
const errorClasses = error 
  ? 'border-error focus:border-error focus:ring-error' 
  : '';

// Combine all input classes
const inputClasses = `${baseClasses} ${sizeClasses[size]} ${variantClasses[variant]} ${errorClasses} ${inputClass}`.trim();

// Label classes
const labelClassesCombined = `block text-sm font-medium text-neutral-700 mb-2 ${error ? 'text-error' : ''} ${labelClass}`.trim();

// Hint/error text classes
const hintTextClasses = `mt-2 text-sm ${error ? 'text-error' : 'text-neutral-500'}`;
---

<div class={`form-group ${className}`}>
  {label && (
    <label for={inputId} class={labelClassesCombined}>
      {label}
      {required && <span class="text-error ml-1">*</span>}
    </label>
  )}
  
  <input
    type={type}
    name={name}
    id={inputId}
    placeholder={placeholder}
    value={value}
    required={required}
    disabled={disabled}
    readonly={readonly}
    class={inputClasses}
    aria-describedby={hint || error ? `${inputId}-description` : undefined}
    aria-invalid={error ? 'true' : 'false'}
    aria-required={required ? 'true' : 'false'}
  />
  
  {(hint || error) && (
    <div id={`${inputId}-description`} class={hintTextClasses}>
      {error || hint}
    </div>
  )}
</div>